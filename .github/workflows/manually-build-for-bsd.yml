name: manually build package for FreeBSD/NetBSD/OpenBSD

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:

      package-name:
        description: input the package name to be built
        required: true

      # https://ftp.netbsd.org/pub/NetBSD/
      # https://cdn.openbsd.org/pub/OpenBSD/
      # https://archive.freebsd.org/old-releases/amd64/
      target:
        description: choose a target to be built for
        type: choice
        options:
          - freebsd-14.3-amd64
          - freebsd-14.2-amd64
          - freebsd-14.1-amd64
          - freebsd-14.0-amd64
          - freebsd-13.5-amd64
          - freebsd-13.4-amd64
          - freebsd-13.3-amd64
          - freebsd-13.2-amd64
          - freebsd-13.2-amd64
          - freebsd-13.1-amd64
          - freebsd-13.0-amd64
          - openbsd-7.7-amd64
          - openbsd-7.6-amd64
          - openbsd-7.5-amd64
          - openbsd-7.4-amd64
          - openbsd-7.3-amd64
          - netbsd-10.1-amd64
          - netbsd-10.0-amd64
          - netbsd-9.4-amd64
          - netbsd-9.3-amd64
          - netbsd-9.2-amd64
          - netbsd-9.1-amd64

      profile:
        description: choose a build profile
        type: choice
        options:
          - release
          - debug

      bundle-type:
        description: choose a pack type
        type: choice
        options:
          - .tar.xz
          - .tar.lz
          - .tar.gz
          - .tar.bz2
          - .zip

      log-level:
        description: choose a log-level
        type: choice
        options:
          - ''
          - '-q'
          - '-v'
          - '-x'

      syspm:
        description: use system package manager instaed of uppm
        type: boolean
        default: false

      static:
        description: create fully statically linked executables
        type: boolean
        default: false

      cross-compiling:
        description: cross compiling
        type: boolean
        default: false

jobs:

  base:
    if : ${{ github.event.inputs.cross-compiling != 'true' }}

    runs-on: ubuntu-latest

    steps:
      - id:  prepare
        run: |
          TARGET_PLATFORM_NAME="$(printf '%s\n' ${{ github.event.inputs.target }} | cut -d- -f1)"
          TARGET_PLATFORM_VERS="$(printf '%s\n' ${{ github.event.inputs.target }} | cut -d- -f2)"

          printf 'TARGET_PLATFORM_NAME=%s\n' "$TARGET_PLATFORM_NAME" >> "$GITHUB_OUTPUT"
          printf 'TARGET_PLATFORM_VERS=%s\n' "$TARGET_PLATFORM_VERS" >> "$GITHUB_OUTPUT"

          if [ ${{ github.event.inputs.syspm }} = true ] ; then
            SYSPM=--syspm
          else
            SYSPM=
          fi

          if [ ${{ github.event.inputs.static }} = true ] ; then
            STATIC=--static
          else
            STATIC=
          fi

          printf 'SYSPM=%s\n' "$SYSPM" >> "$GITHUB_OUTPUT"
          printf 'STATIC=%s\n' "$STATIC" >> "$GITHUB_OUTPUT"


    outputs:
      target-platform-name: ${{ steps.prepare.outputs.TARGET_PLATFORM_NAME }}
      target-platform-vers: ${{ steps.prepare.outputs.TARGET_PLATFORM_VERS }}
      syspm: ${{ steps.prepare.outputs.SYSPM }}
      static: ${{ steps.prepare.outputs.STATIC }}


  cross:
    if : ${{ github.event.inputs.cross-compiling == 'true' }}

    runs-on: ubuntu-latest

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg

      - run: ./ppkg setup ${{ needs.base.outputs.syspm }}
      - run: ./ppkg update

      - run: ./ppkg install ${{ github.event.inputs.target }}/${{ github.event.inputs.package-name }} --profile=${{ github.event.inputs.profile }} ${{ github.event.inputs.log-level }} ${{ needs.base.outputs.static }}

      - run: ./ppkg bundle  ${{ github.event.inputs.target }}/${{ github.event.inputs.package-name }} ${{ github.event.inputs.bundle-type }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.package-name }}---${{ github.event.inputs.target }}.${{ github.event.inputs.profile }}${{ github.event.inputs.bundle-type }}
          path: '*${{ github.event.inputs.bundle-type }}'



  native:
    if : ${{ github.event.inputs.cross-compiling != 'true' }}

    needs: base

    runs-on: ubuntu-latest

    steps:
      - run: curl -LO https://curl.se/ca/cacert.pem

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg

      - uses: cross-platform-actions/action@master
        with:
          operating_system: ${{ needs.base.outputs.target-platform-name }}
          version: ${{ needs.base.outputs.target-platform-vers }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run export SSL_CERT_FILE="$PWD/cacert.pem"

            run ./ppkg setup ${{ needs.base.outputs.syspm }}
            run ./ppkg update
            run ./ppkg install ${{ github.event.inputs.target }}/${{ github.event.inputs.package-name }} --profile=${{ github.event.inputs.profile }} ${{ github.event.inputs.log-level }} ${{ needs.base.outputs.static }}
            run ./ppkg bundle  ${{ github.event.inputs.target }}/${{ github.event.inputs.package-name }} ${{ github.event.inputs.bundle-type }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.package-name }}---${{ github.event.inputs.target }}.${{ github.event.inputs.profile }}${{ github.event.inputs.bundle-type }}
          path: '*${{ github.event.inputs.bundle-type }}'
